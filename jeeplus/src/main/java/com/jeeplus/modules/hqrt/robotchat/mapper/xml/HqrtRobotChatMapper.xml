<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.hqrt.robotchat.mapper.HqrtRobotChatMapper">
    
	<sql id="hqrtRobotChatColumns">
		a.id AS "id",
		a.rowguid AS "rowguid",
		a.rowdatetime AS "rowdatetime",
		a.sessionid AS "sessionid",
		a.customerid AS "customerid",
		a.customername AS "customername",
		a.customermobile AS "customermobile",
		a.customerprovince AS "customerprovince",
		a.startdatetime AS "startdatetime",
		a.enddatetime AS "enddatetime",
		a.timelen AS "timelen",
		a.endreasonno AS "endreasonno",
		a.endreason AS "endreason",
		a.queueid AS "queueid",
		a.queuename AS "queuename",
		a.originalsessionid AS "originalsessionid"
	</sql>
	
	<sql id="hqrtRobotChatJoins">
		<!--  LEFT JOIN erp_goods_car_models b ON a.id = b.erp_goods_id
		 LEFT JOIN (select * from erp_inventory_item where inventory_id = #{exErpInventory.id} AND del_flag = '0') c ON a.id = c.goods_id -->
	</sql>
	
    
	<select id="get" resultType="HqrtRobotChat" >
		SELECT 
			<include refid="hqrtRobotChatColumns"/>
		FROM hqrt_robot_chat a
		<include refid="hqrtRobotChatJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="HqrtRobotChat" >
		SELECT 
			<include refid="hqrtRobotChatColumns"/>
		FROM hqrt_robot_chat a
		<include refid="hqrtRobotChatJoins"/>
		<where>
			
			${dataScope}
			<if test="rowguid != null and rowguid != ''">
				AND a.rowguid = #{rowguid}
			</if>
			<if test="rowdatetime != null and rowdatetime != ''">
				AND a.rowdatetime = #{rowdatetime}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findListGroupBy" resultType="HqrtRobotChat" >
		SELECT 
			<include refid="hqrtRobotChatColumns"/>
		FROM hqrt_robot_chat a
		<where>
			${dataScope}
			<if test="customerprovinceList != null and customerprovinceList.size() &gt; 0">
				AND a.customerprovince in 
					<foreach collection="customerprovinceList" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
			</if>
			<if test="queuename != null and queuename != ''">
				AND a.queuename = #{queuename}
			</if>
			<if test="starttime != null and endttime != null ">
				AND a.startdatetime BETWEEN #{starttime} AND #{endttime}
			</if>
		</where>
		GROUP BY a.QueueName,a.CustomerProvince
	</select>
	
	<select id="findListByQueueNameAndCustomerProvince" resultType="HqrtRobotChat" >
		SELECT 
			<include refid="hqrtRobotChatColumns"/>
		FROM hqrt_robot_chat a 
		<where>
			${dataScope}
			<if test="queuename != null and queuename != ''">
				AND a.queuename = #{queuename}
			</if>
			<if test="customerprovince != null and customerprovince != ''">
				AND a.customerprovince = #{customerprovince}
			</if>
		</where>
	</select>
	
	<select id="findAllList" resultType="HqrtRobotChat" >
		SELECT 
			<include refid="hqrtRobotChatColumns"/>
		FROM hqrt_robot_chat a
		<include refid="hqrtRobotChatJoins"/>
		<where>
			
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO hqrt_robot_chat(
			rowguid,
			rowdatetime,
			sessionid,
			customerid,
			customername,
			customermobile,
			customerprovince,
			startdatetime,
			enddatetime,
			timelen,
			endreasonno,
			endreason,
			queueid,
			queuename,
			originalsessionid
		) VALUES (
			#{rowguid},
			#{rowdatetime},
			#{sessionid},
			#{customerid},
			#{customername},
			#{customermobile},
			#{customerprovince},
			#{startdatetime},
			#{enddatetime},
			#{timelen},
			#{endreasonno},
			#{endreason},
			#{queueid},
			#{queuename},
			#{originalsessionid}
		)
	</insert>
	
	<update id="update">
		UPDATE hqrt_robot_chat SET 	
			rowguid = #{rowguid},
			rowdatetime = #{rowdatetime},
			sessionid = #{sessionid},
			customerid = #{customerid},
			customername = #{customername},
			customermobile = #{customermobile},
			customerprovince = #{customerprovince},
			startdatetime = #{startdatetime},
			enddatetime = #{enddatetime},
			timelen = #{timelen},
			endreasonno = #{endreasonno},
			endreason = #{endreason},
			queueid = #{queueid},
			queuename = #{queuename},
			originalsessionid = #{originalsessionid}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM hqrt_robot_chat
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE hqrt_robot_chat SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="HqrtRobotChat" statementType="STATEMENT">
		select * FROM hqrt_robot_chat  where ${propertyName} = '${value}'
	</select>
	
</mapper>